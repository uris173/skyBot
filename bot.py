from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.utils.markdown import text
from aiogram.dispatcher import Dispatcher

from config import TOKEN
import keyboards as kb

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands='start')
async def command_start(message: types.Message):
    await message.reply("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫.\nAsslomu alaykum. Tilni tanlang.",
                        reply_markup=kb.language_button)


'''Russian'''

@dp.message_handler()
async def process(message: types.Message):
    if message.text == '–†—É—Å—Å–∫–∏–π —è–∑—ã–∫':
        await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç ‚Ü©Ô∏è.', reply_markup=kb.other_button)

    elif message.text == '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ':
        await bot.send_message(message.chat.id,
                               "–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ö–æ–Ω—Ç–∞–∫—Ç –∏ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—é, –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏–µ –µ—Å—Ç—å –ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ "
                               "–≤–∞—à–µ–º—É –∞–¥—Ä–µ—Å—É. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∞–º –æ—Ç–≤–µ—Ç—è—Ç –ª–∏–±–æ —Å–≤—è–∂—É—Ç—Å—è!",
                               reply_markup=kb.connection_button)

    elif message.text == '–¢–∞—Ä–∏—Ñ—ã':
        await bot.send_message(message.chat.id, "–° —Ç–∞—Ä–∏—Ñ–Ω—ã–º –ø–ª–∞–Ω–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Ç—É—Ç ‚Ü©Ô∏è.",
                               reply_markup=kb.rate_url_keyboard)

    elif message.text == '–°–≤—è–∑—å':
        await bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n+998 78 113 60 01\n–ù–æ–º–µ—Ä –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏:\n"
                                                "+998 78 113 63 13\n–ù–∞—à Telegram: @skyline_support")

    elif message.text == '–û –Ω–∞—Å':
        await bot.send_message(message.chat.id, "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–∏–∂–µ ‚Ü©Ô∏è.",
                               reply_markup=kb.about_us_keyboard)

    elif message.text == "–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫.":
        await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫.\nTilni tanlang.',
                               reply_markup=kb.language_button)

    elif message.text == '–ù–∞–∑–∞–¥ üîô':
        await bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=kb.other_button)

    elif message.text == text():
        await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—É–Ω–∫—Ç', reply_markup=kb.other_button)







    '''Uzbek'''

    if message.text == "O'zbek tili":
        await bot.send_message(message.chat.id, "Ob'ektni tanlang ‚Ü©Ô∏è.", reply_markup=kb.uz_button_other)

    elif message.text == 'Ulanish':
        await bot.send_message(message.chat.id,
                               "Telefon raqam va geolokatsiyani so'rayabmiz, manzilingizda ulanish imkoniyati "
                               "mavjudligini aniqlashimiz uchun. Tez orada javob beramiz yoki bog'lanamiz!",
                               reply_markup=kb.uz_button_connection)

    elif message.text == 'Tariflar':
        await bot.send_message(message.chat.id, "Tarif rejasi bilan bu yerda tanishishingiz mumkin ‚Ü©Ô∏è.",
                               reply_markup=kb.uz_rate_url)

    elif message.text == 'Aloqa':
        await bot.send_message(message.chat.id, "Texnik yordam raqami:\n+998 78 113 60 01\nBuxgalteriya raqami:\n+998 "
                                                "78 "
                                                "113 63 13\nBizning Telegram: @skyline_support")

    elif message.text == 'Biz haqimizda':
        await bot.send_message(message.chat.id, "Quyidagi bo'limda batafsil ma'lumot ‚Ü©Ô∏è.",
                               reply_markup=kb.uz_about_us)

    elif message.text == "Tilni tanlash.":
        await bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫.\nTilni tanlang.',
                               reply_markup=kb.language_button)

    elif message.text == 'Orqaga üîô':
        await bot.send_message(message.chat.id, 'Asosiy menyu.', reply_markup=kb.uz_button_other)















if __name__ == '__main__':
    executor.start_polling(dp)
